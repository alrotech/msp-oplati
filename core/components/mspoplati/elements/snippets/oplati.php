<?php

// [[oplati@set]]

// @php @js - это как генерировать коды, на php или на js?

// orderid
// частота обновлений?
// путь к js?
// оформление?

// tpl рисует обвязку, а дальше все делает скрипт

// сниппет вывел блок - показываем код и ставим таймер
// - по таймеру ходим на сервер, валидируем оплату,
// если нет - выдаем статусы под кодом
// если да - прячем код, говорим что все хорошо, вернуться на сайт?

// QR-код, размеры задаются через сниппет для js, либа на клиенте любая
// загрузка css, загрузка js - свой шаблон
// можно переопределить как стили, так и js
//

// модуль по умолчанию шлет запрос на страницу unpaid, которая может быть и корзиной в том числе
// это нужно, чтобы обеспечить работу getPaymentLink, которая позволит выдавать страницу оплаты человеку в любой момент со стороны администратора
// при этом всегда можно вызвать снипет в любом месте, куда передать необходимые параметры, типа номера заказа (ему только номер заказа и нужен по сути)
// номер заказа при этом можно брать из параметра msorder по умолчанию
// далее снипет делает первый запрос к серверу и формирует ссылку для оплаты и данные для кр-кода и передает в скрипт в виде данных через дата атрибуты (?)
// скрипт в свою очередь показывает кнопку и рисует сам код по данным, скрипт можно подключать любой по инструкции
// далее тот же скрипт делает запрос на сервер с целью проверки платежа и меняет статус если нужно
// если время ожидания вышло, то нужно повторить запрос на перегенерацию кода
// обе операции следует делать через процессоры, и вызывать их в том числе и в снипете
// так же можно предусмотреть опционально добавление срипта проверки в cron
//
// в админке следует предусмотреть кнопку для проверки статуса платежа заказа, если он был через оплати
// следовательно, нужно иметь возможность проверить все такие заказы за один проход
//
// так же следует реализовать механизм сверки по кассе в конце дня - в след версиях
//
// так же нужно иметь возможность вернуть деньги в течение текущего бизнес-дня - в следуюбщих версиям

